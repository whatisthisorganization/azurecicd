name: Deploy Terraform

on:
  workflow_call:
    inputs:
      environment:
        required: true
        type: string

permissions:
  id-token: write
  contents: read

jobs:
  terraform:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Terraform
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_directory: terraform
        terraform_version: 1.5.6

    - name: Log in to Azure
      uses: azure/login@v1
      with:
        client-id: ${{ vars.AZURE_CLIENT_ID }}
        tenant-id: ${{ vars.AZURE_TENANT_ID }}
        subscription-id: ${{ vars.AZURE_SUBSCRIPTION_ID }}
    
    - name: Set up Terraform backend
      run: |
        RESOURCE_GROUP_NAME="terraform-statefile-rg-${{ inputs.environment }}"
        STORAGE_ACCOUNT_NAME="tfstatefile${{ vars.RG_LOCATION }}${{ inputs.environment }}"
        CONTAINER_NAME="tfstate"
        RG_SKU_VAR="RG_SKU_${{ inputs.environment }}"
        RG_SKU=${{ 'RG_SKU_' + inputs.environment }}

        az group create --name $RESOURCE_GROUP_NAME --location ${{ vars.RG_LOCATION }}
        az storage account create \
          --name $STORAGE_ACCOUNT_NAME \
          --resource-group $RESOURCE_GROUP_NAME \
          --location ${{ vars.RG_LOCATION }} \
          --sku $RG_SKU
        az storage container create \
          --name $CONTAINER_NAME \
          --account-name $STORAGE_ACCOUNT_NAME

        echo "STORAGE_ACCOUNT_NAME=$STORAGE_ACCOUNT_NAME" >> $GITHUB_ENV
        echo "CONTAINER_NAME=$CONTAINER_NAME" >> $GITHUB_ENV

    - name: Initialize Terraform
      working-directory: terraform
      env:
        ARM_SUBSCRIPTION_ID: ${{ vars.AZURE_SUBSCRIPTION_ID }}
        ARM_CLIENT_ID: ${{ vars.AZURE_CLIENT_ID }}
        ARM_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
        ARM_TENANT_ID: ${{ vars.AZURE_TENANT_ID }}
        STORAGE_ACCOUNT_NAME: ${{ env.STORAGE_ACCOUNT_NAME }}
        CONTAINER_NAME: ${{ env.CONTAINER_NAME }}
      run: terraform init

    - name: Validate Terraform
      working-directory: terraform
      run: terraform validate

    - name: Plan Terraform
      working-directory: terraform
      env:
        ARM_SUBSCRIPTION_ID: ${{ vars.AZURE_SUBSCRIPTION_ID }}
        ARM_CLIENT_ID: ${{ vars.AZURE_CLIENT_ID }}
        ARM_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
        ARM_TENANT_ID: ${{ vars.AZURE_TENANT_ID }}
        STORAGE_ACCOUNT_NAME: ${{ env.STORAGE_ACCOUNT_NAME }}
        CONTAINER_NAME: ${{ env.CONTAINER_NAME }}
      run: terraform plan

    - name: Apply Terraform
      if: ${{ github.event.inputs.apply == 'true' }}
      working-directory: terraform
      env:
        ARM_SUBSCRIPTION_ID: ${{ vars.AZURE_SUBSCRIPTION_ID }}
        ARM_CLIENT_ID: ${{ vars.AZURE_CLIENT_ID }}
        ARM_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
        ARM_TENANT_ID: ${{ vars.AZURE_TENANT_ID }}
        STORAGE_ACCOUNT_NAME: ${{ env.STORAGE_ACCOUNT_NAME }}
        CONTAINER_NAME: ${{ env.CONTAINER_NAME }}
      run: terraform apply -auto-approve
